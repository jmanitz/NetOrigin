% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stochastic_sib_model.R
\name{stochastic_sib_model}
\alias{stochastic_sib_model}
\title{Stochastic SIB model for infected cases simulation}
\usage{
stochastic_sib_model(
  mu,
  beta,
  rho,
  sigma,
  gamma,
  alpha,
  mu_B,
  m = 0.3,
  theta,
  nnodes,
  POP_node,
  fluxes,
  time_sim,
  y0
)
}
\arguments{
\item{mu}{population natality and mortality rate (day^-1)}

\item{beta}{contact rate}

\item{rho}{immunity loss rate (day^-1)}

\item{sigma}{symptomatic ratio, i.e., fraction of infected people that develop symptoms and are infective. 
(The remaining fraction enters directly the recovered compartment.)}

\item{gamma}{rate at which people recover from cholera (day^-1)}

\item{alpha}{cholera induced mortality rate (day^-1)}

\item{mu_B}{death rate of V.cholerae in the aquatic environment (day^-1)}

\item{m}{parameter for infection force, default value is 0.3}

\item{theta}{contamination rate}

\item{nnodes}{number of nodes/cities}

\item{POP_node}{vector, length represents number of cities/nodes; vector represents
population at each node}

\item{fluxes}{matrix, number of nodes x number of nodes 
where each row contains the probabilities a person travels from the given city (by Row Index) to another city (by Column Index).}

\item{time_sim}{time steps for simulation, e.g., seq(0, 100, 0.1)}

\item{y0}{initial condition for stochastic_sib_model, output of 'initial_condition_sib_model'}
}
\value{
a matrix, nnodes x number of time steps, representing number of new cases at each node, each time step
}
\description{
\code{stochastic_sib_model} Stochastic SIB model for infected cases simulation
}
\examples{
data(envirparaList)
y0 <- initial_condition_sib_model(envirparaList$popu, envirparaList$sigma, 
  envirparaList$mu_B, envirparaList$theta, c(428, 432))
time_sim=seq(0, 1, by=0.1)
simu.list = stochastic_sib_model(mu = envirparaList$mu, beta = envirparaList$beta, 
                   rho = envirparaList$rho, sigma = envirparaList$sigma, 
                   gamma = envirparaList$gamma, alpha = envirparaList$alpha, 
                   mu_B = envirparaList$mu_B, m = 0.3,
                   theta = envirparaList$theta, 
                   nnodes = length(envirparaList$popu), POP_node = envirparaList$popu, 
                   fluxes = envirparaList$humanmob.mass, 
                   time_sim = time_sim, y0 = y0)
}
